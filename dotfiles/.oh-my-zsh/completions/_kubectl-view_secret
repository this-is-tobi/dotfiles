#compdef kubectl-view_secret kvs

_kubectl-view_secret() {
  local -a args completions
  
  # Build the arguments for __complete (all words except the command itself)
  args=("${words[@]:1}")
  
  # Get raw output from __complete
  local out=$(kubectl view-secret __complete "${args[@]}" 2>/dev/null)
  
  # Process the output line by line
  local -a lines
  lines=("${(@f)out}")
  
  local -a matches descriptions
  local directive=""
  
  for line in "${lines[@]}"; do
    # Check if it's a directive line
    if [[ "$line" == :* ]]; then
      directive="${line:1}"
      continue
    fi
    
    # Skip empty lines
    [[ -z "$line" ]] && continue
    
    # Split on tab if present
    if [[ "$line" == *$'\t'* ]]; then
      local comp="${line%%$'\t'*}"
      local desc="${line#*$'\t'}"
      matches+=("$comp")
      descriptions+=("$desc")
    else
      matches+=("$line")
      descriptions+=("")
    fi
  done
  
  # Provide completions
  if (( ${#matches[@]} > 0 )); then
    # Check if we have descriptions
    local has_desc=0
    for desc in "${descriptions[@]}"; do
      [[ -n "$desc" ]] && has_desc=1 && break
    done
    
    if (( has_desc )); then
      # Create array of "completion:description" pairs
      local -a pairs
      for i in {1..${#matches[@]}}; do
        if [[ -n "${descriptions[$i]}" ]]; then
          pairs+=("${matches[$i]}:${descriptions[$i]}")
        else
          pairs+=("${matches[$i]}")
        fi
      done
      _describe 'completions' pairs
    else
      compadd -a matches
    fi
    return 0
  fi
  
  return 1
}
